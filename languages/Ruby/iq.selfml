(detector
    (extension rb)
    (extension rbx)
    (extension rjs)
    (extension Rakefile)
    (extension rake)
    (extension cgi)
    (extension fcgi)
    (extension gemspec)
    (extension irbrc)
    (extension capfile))

(detector
    (content-matches [^#!/.*\bruby]))

(folding
    (start `(?x)^
	    (\s*+
	        (module|class|def(?!.*\bend\s*$)
	        |unless|if
	        |case
	        |begin
	        |for|while|until
	         |^=begin
	        |(  "(\\.|[^"])*+"          # eat a double quoted string
	         | '(\\.|[^'])*+'        # eat a single quoted string
	         |   [^#"']                # eat all but comments and strings
	         )*
	         (                        \s   (do|begin|case)
	         | (?<!\$)[-+=&|*/~%^<>~] \s*+ (if|unless)
	         )
	        )\b
	        (?! [^;]*+ ; .*? \bend\b )
	    |(  "(\\.|[^"])*+"              # eat a double quoted string
	     | '(\\.|[^'])*+'            # eat a single quoted string
	     |   [^#"']                    # eat all but comments and strings
	     )*
	     ( \{ (?!  [^}]*+ \} )
	     | \[ (?! [^\]]*+ \] )
	     )
	    ).*$
	|   [#] .*? \(fold\) \s*+ $         # Sune‚Äôs special marker
	`)
    (stop `(?x)
		(   (^|;) \s*+ end   \s*+ ([#].*)? $
		|   (^|;) \s*+ end \. .* $
		|   ^     \s*+ [}\]] ,? \s*+ ([#].*)? $
		|   [#] .*? \(end\) \s*+ $    # Sune‚Äôs special marker
		|   ^=end
		)`))

(in [keyword.control.start-block.ruby, meta.syntax.ruby.start-block]
    (pair “
        ”
        (smart-typing))
    (pair `[`
        `]`
        (smart-typing))
    (pair [(]
        [)]
        (smart-typing))
    (pair |
        |
        (smart-typing))
    (pair "
        "
        (smart-typing))
    (pair [{]
        [}]
        (smart-typing)))

(shell-variables
    (TM_COMMENT_START [# ])
    (TM_COMMENT_START_2 [=begin
])
    (TM_COMMENT_END_2 [=end
]))

(comment.line [# ])

(comment.block [=begin
] [=end
])

(in [meta.environment-variable.ruby string.quoted])

(in [meta.require.ruby string.quoted])

(indentation.decrease `^\s*([}\]]\s*$|(end|rescue|ensure|else|elsif|when)\b)`)

(indentation.increase `(?x)^
    (\s*
        (module|class|def
        |unless|if|else|elsif
        |case|when
        |begin|rescue|ensure
        |for|while|until
        |(?= .*? \b(do|begin|case|if|unless)\b )
         # the look-ahead above is to quickly discard non-candidates
         (  "(\\.|[^\\"])*+"        # eat a double quoted string
         | '(\\.|[^\\'])*+'      # eat a single quoted string
         |   [^#"']                # eat all but comments and strings
         )*
         (                         \s   (do|begin|case)
         | [-+=&|*/~%^<>~](?<!\$.) \s*+ (if|unless)
         )
        )\b
        (?! [^;]*+ ; .*? \bend\b )
    |(  "(\\.|[^\\"])*+"            # eat a double quoted string
     | '(\\.|[^\\'])*+'          # eat a single quoted string
     |   [^#"']                    # eat all but comments and strings
     )*
     ( \{ (?!  [^}]*+ \} )
     | \[ (?! [^\]]*+ \] )
     )
    ).*$`)

(in [source.ruby meta.function]
    (symbol-list
        (transformation s/^\s*def\s+/ /)))

(in [source.ruby meta.function-call entity.name.function]
    (symbol-list))